---

name: Creating the infrastructure

on:
  push:
    branches:
      - dev

jobs:
  terraform:
    runs-on: ubuntu-latest
    name: Amazon ECR
    env:
        TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
        TF_VAR_ecr_repository_name: ${{ secrets.ECR_REPOSITORY_NAME }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: dev

      # use Terraform in the Runner environment
      - name: Use latest Terraform
        uses: hashicorp/setup-terraform@v1

      - run: cp main.tf main2

      - run: |
          cat >> main.tf << EOF

          module "backend" {
            source = "github.com/samstav/terraform-aws-backend"
            backend_bucket = "cycloid-tf-state-bucket"
            # using options, e.g. if you dont want a dynamodb lock table, uncomment this:
            dynamodb_lock_table_enabled = true
          }
          EOF

      - run: terraform get -update

      - run: terraform init -backend=false

      - run: terraform plan -out=backend.plan -target=module.backend

      - run: terraform apply backend.plan
        continue-on-error: true

      - run: rm main.tf && mv main2 main.tf

      - run: |
          cat >> main.tf << EOF

          terraform {
            required_providers {
              aws = {
                source  = "hashicorp/aws"
                version = "~> 3.0"
              }
            }
            backend "s3" {
              bucket = "cycloid-tf-state-bucket"
              key = "states/terraform.tfstate"
              access_key = "${{ secrets.AWS_ACCESS_KEY }}"
              secret_key = "${{ secrets.AWS_SECRET_KEY }}"
              region = "${{ secrets.AWS_REGION }}"
              encrypt = true
              dynamodb_table = "terraform-lock"
            }
          }
          EOF

      - run: rm -rf .terraform/

      - run: cat main.tf

      - name: Using terraform init
        run: terraform init --reconfigure

      - name: Using terraform plan
        run: terraform plan -no-color

      # create ECR Repository
      - name: Create ECR Repository
        run: terraform apply -auto-approve