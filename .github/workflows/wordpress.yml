---
name: Generating Wordpress Image

on:
  push:
    branches:
      - dev

jobs:
  packer:
    runs-on: ubuntu-latest
    name: Build with Packer

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: dev

      # fix backwards incompatibilities in template
      - name: Fix Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: fix
          target: wordpress-image.json

      # validate templates
      - name: Validate Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: -syntax-only
          target: wordpress-image.json

      # make GitHub Repository (owner/repository name) and Username in lowercase
      - name: GitHub Repository and Username in lowercase
        run: |
          echo GITHUB_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo GITHUB_ACTOR=$(echo ${{ github.actor }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      # use Packer in the Runner environment
      - name: Use latest Packer
        uses: hashicorp-contrib/setup-packer@v1

      # build docker image
      - name: Build Image and push it on the GitHub Repository
        run: packer build -color=false -on-error=abort wordpress-image.json
        env:
          PACKER_LOG: 1
          GITHUB_USER: ${{ env.GITHUB_ACTOR }}
          GITHUB_PASS: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO: ${{ env.GITHUB_REPOSITORY }}
          GITHUB_REGISTRY_URL: "ghcr.io"

  ecr:
    runs-on: ubuntu-latest
    name: Push image to ECR repository
    needs: packer

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: "ghcr.io"
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Pull the generated image stored on GitHub
      - name: Pull the generated image stored on GitHub
        run: |
          docker pull ghcr.io/chammach/wordpress-image:dev

      # AWS part

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: eu-west-3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: testing2
        run: |
          docker tag wordpress-image:dev $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest